





Getting Started with Ethereum and Polygon - Phantom Developer Docs










Phantom Developer DocsHomeDeveloper DiscordChangelogTwitterSearch⌃KLinks👻IntroductionIntroductionDeveloper Settings🟢SolanaGetting Started With SolanaDetecting the ProviderEstablishing a ConnectionSending a Legacy TransactionSending a Versioned TransactionSigning a MessageError Messages and Codes🔷Ethereum & PolygonGetting Started with Ethereum and PolygonDetecting the ProviderEstablishing a ConnectionSending a TransactionSigning a MessageProvider API Reference⛓Phantom DeeplinksPhantom DeeplinksProvider MethodsOther MethodsHandling SessionsSpecifying RedirectsEncryptionLimitations🤝Library IntegrationsDynamicPrivyRainbowKitwagmiWeb3-OnboardWeb3-React (V8)🛠Developer PowertoolsPhantom BlocklistSign-In-With (SIW) StandardsSolana Priority FeesSolana Versioned TransactionsWallet Standard✅Best PracticesDisplaying Apps within the Activity TabDisplaying Tokens on SolanaDisplaying Apps within Dialogs🙋ResourcesFAQDemo ApplicationsCommunity Guides & SDKsLogos & AssetsPowered By GitBookGetting Started with Ethereum and PolygonThe Phantom browser extension and mobile in-app browser are both designed to interact with web applications. EVM web apps can interact with Phantom via the provider that is injected at window.phantom.ethereum. This provider conforms to the EIP-1193 standard and is also injected at window.ethereum to support legacy integrations.This documentation is dedicated to covering all aspects of the provider. For guidance on how to integrate Phantom into an EVM wallet adapter library, check out our following tutorials:​Dynamic​​Privy​​RainbowKIt​​wagmi​​Web3-Onboard​​Web3-React (V8)​Solana - PreviousError Messages and CodesNext - Ethereum & PolygonDetecting the ProviderLast modified 11d agoCopy link



