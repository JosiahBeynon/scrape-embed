





Detecting the Provider - Phantom Developer Docs











Phantom Developer DocsHomeDeveloper DiscordChangelogTwitterSearch⌃KLinks👻IntroductionIntroductionDeveloper Settings🟢SolanaGetting Started With SolanaDetecting the ProviderEstablishing a ConnectionSending a Legacy TransactionSending a Versioned TransactionSigning a MessageError Messages and Codes🔷Ethereum & PolygonGetting Started with Ethereum and PolygonDetecting the ProviderEstablishing a ConnectionSending a TransactionSigning a MessageProvider API Reference⛓Phantom DeeplinksPhantom DeeplinksProvider MethodsOther MethodsHandling SessionsSpecifying RedirectsEncryptionLimitations🤝Library IntegrationsDynamicPrivyRainbowKitwagmiWeb3-OnboardWeb3-React (V8)🛠Developer PowertoolsPhantom BlocklistSign-In-With (SIW) StandardsSolana Priority FeesSolana Versioned TransactionsWallet Standard✅Best PracticesDisplaying Apps within the Activity TabDisplaying Tokens on SolanaDisplaying Apps within Dialogs🙋ResourcesFAQDemo ApplicationsCommunity Guides & SDKsLogos & AssetsPowered By GitBookDetecting the ProviderTo detect if a user has already installed Phantom, a web application should check for the existence of a phantom object. Phantom's browser extension and mobile in-app browser will both inject a phantom object into the window of any web application the user visits, provided that site is using https://, on localhost, or is 127.0.0.1. Phantom will not inject the provider into iframes or sites use http://.If a phantom object exists, Solana apps can interact with Phantom via the API found at window.phantom.solana. This solana object is also available at window.solana to support legacy integrations. To detect if Phantom is installed, an application should check for an additional isPhantom flag.const isPhantomInstalled = window.phantom?.solana?.isPhantomIf Phantom is not installed, we recommend you redirect your users to our website. Altogether, this may look like the following.const getProvider = () => { if ('phantom' in window) { const provider = window.phantom?.solana;​ if (provider?.isPhantom) { return provider; } }​  window.open('https://phantom.app/', '_blank');};For an example of how a React application can detect Phantom, please refer to the getProvider function in our sandbox. Solana - PreviousGetting Started With SolanaNext - SolanaEstablishing a ConnectionLast modified 10mo agoCopy link



